vis.test <- ggplot_missing(test.data)
num.miss.test <- sapply(test.data,function(x) sum(is.na(x)))
miss.vis <- list(vis.train, vis.test, num.miss.train, num.miss.test)
# histogram of Target variable
if (is.numeric(train.data[tar.loc.train])) { histo <- hist(train.data[tar.loc.train]) }
else {histo = NULL}
# exploring relationships among features: correlation matrix
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
# visualing relationships among features: scatterplot matrix
col <- c("blue", "red")
scatterplot <- pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1)
# more informative scatterplot matrix
library(psych)
pairs.panels(train.data[numeric.col])
return(list(sum.data, miss.vis, histo, matrix.cor, scatterplot))
}
visualize.data <- vis(train.data, test.data, 17, 17)
View(visualize.data)
# Data visualization function:
vis <- function(train.data, test.data, tar.loc.train, tar.loc.test)
{
# summarize dataset
sum.train <- summary(train.data)
sum.test  <- summary(test.data)
sum.data  <- list(sum.train, sum.test)
# create ggplot_missing function to map missing values:
library(reshape2)
library(dplyr)
library(ggplot2)
ggplot_missing <- function(x){
x %>% is.na %>% melt %>% ggplot(data = ., aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) +
scale_fill_grey (name = '', labels = c('Present', 'Missing')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(x = 'Variables on Dataset', y = 'Rows / Observations') }
# map missing values for train data:
vis.train <- ggplot_missing(train.data)
num.miss.train <- sapply(train.data,function(x) sum(is.na(x)))
# map missing values for test data:
vis.test <- ggplot_missing(test.data)
num.miss.test <- sapply(test.data,function(x) sum(is.na(x)))
miss.vis <- list(vis.train, vis.test, num.miss.train, num.miss.test)
# histogram of Target variable
if (is.numeric(train.data[tar.loc.train])) { histo <- hist(train.data[tar.loc.train]) }
else {histo = NULL}
# exploring relationships among features: correlation matrix
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
# visualing relationships among features: scatterplot matrix
col <- c("blue", "red")
scatterplot <- pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1)
# more informative scatterplot matrix
library(psych)
pairs.panels(train.data[numeric.col])
return(list("summary"=sum.data, "missing.value"=miss.vis, "histogram"=histo,
"matrix.correlation"=matrix.cor, "scatter.plot"=scatterplot))
}
visualize.data <- vis(train.data, test.data, 17, 17)
visualize.data$summary
# Data visualization function:
vis <- function(train.data, test.data, tar.loc.train, tar.loc.test)
{
# summarize dataset
sum.train <- summary(train.data)
sum.test  <- summary(test.data)
sum.data  <- list("summary.train.data"=sum.train, "summary.test.data"=sum.test)
# create ggplot_missing function to map missing values:
library(reshape2)
library(dplyr)
library(ggplot2)
ggplot_missing <- function(x){
x %>% is.na %>% melt %>% ggplot(data = ., aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) +
scale_fill_grey (name = '', labels = c('Present', 'Missing')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(x = 'Variables on Dataset', y = 'Rows / Observations') }
# map missing values for train data:
vis.train <- ggplot_missing(train.data)
num.miss.train <- sapply(train.data,function(x) sum(is.na(x)))
# map missing values for test data:
vis.test <- ggplot_missing(test.data)
num.miss.test <- sapply(test.data,function(x) sum(is.na(x)))
miss.vis <- list("vis.train"=vis.train, "vis.test"=vis.test,
"num.train"=num.miss.train, "num.test"=num.miss.test)
# histogram of Target variable
if (is.numeric(train.data[tar.loc.train])) { histo <- hist(train.data[tar.loc.train]) }
else {histo = NULL}
# exploring relationships among features: correlation matrix
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
# visualing relationships among features: scatterplot matrix
col <- c("blue", "red")
scatterplot <- pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1)
# more informative scatterplot matrix
library(psych)
pairs.panels(train.data[numeric.col])
return(list("summary"=sum.data, "missing.value"=miss.vis, "histogram"=histo,
"matrix.correlation"=matrix.cor, "scatter.plot"=scatterplot))
}
visualize.data <- vis(train.data, test.data, 17, 17)
visualize.data$summary$summary.train.data
visualize.data$summary$summary.test.data
visualize.data$histogram
visualize.data$scatter.plot
visualize.data$scatter.plot
visualize.data$matrix.correlation
col <- c("blue", "red")
scatterplot <- pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1)
scatterplot
col <- c("blue", "red")
scatterplot <- function(train.data, numeric.col)
{ pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1) }
scatterplot()
?ggplot
# visualing relationships among features: scatterplot matrix
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("gridExtra")
scatterplot <- arrangeGrob(pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1))
library(tidyverse)
library(gridExtra)
scatterplot <- arrangeGrob(pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1))
# Data visualization function:
vis <- function(train.data, test.data, tar.loc.train, tar.loc.test)
{
# summarize dataset
sum.train <- summary(train.data)
sum.test  <- summary(test.data)
sum.data  <- list("summary.train.data"=sum.train, "summary.test.data"=sum.test)
# create ggplot_missing function to map missing values:
library(reshape2)
library(dplyr)
library(ggplot2)
ggplot_missing <- function(x){
x %>% is.na %>% melt %>% ggplot(data = ., aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) +
scale_fill_grey (name = '', labels = c('Present', 'Missing')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(x = 'Variables on Dataset', y = 'Rows / Observations') }
# map missing values for train data:
vis.train <- ggplot_missing(train.data)
num.miss.train <- sapply(train.data,function(x) sum(is.na(x)))
# map missing values for test data:
vis.test <- ggplot_missing(test.data)
num.miss.test <- sapply(test.data,function(x) sum(is.na(x)))
miss.vis <- list("vis.train"=vis.train, "vis.test"=vis.test,
"num.train"=num.miss.train, "num.test"=num.miss.test)
# histogram of Target variable
if (is.numeric(train.data[tar.loc.train])) { histo <- hist(train.data[tar.loc.train]) }
else {histo = NULL}
# exploring relationships among features: correlation matrix
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
# visualing relationships among features: scatterplot matrix
library(tidyverse)
library(gridExtra)
col <- c("blue", "red")
scatterplot <- arrangeGrob(pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1))
# more informative scatterplot matrix
library(psych)
pairs.panels(train.data[numeric.col])
return(list("summary"=sum.data, "missing.value"=miss.vis, "histogram"=histo,
"matrix.correlation"=matrix.cor, "scatter.plot"=scatterplot))
}
visualize.data <- vis(train.data, test.data, 17, 17)
visualize.data <- vis(train.data, test.data, 17, 17)
# Data visualization function:
vis <- function(train.data, test.data, tar.loc.train, tar.loc.test)
{
# summarize dataset
sum.train <- summary(train.data)
sum.test  <- summary(test.data)
sum.data  <- list("summary.train.data"=sum.train, "summary.test.data"=sum.test)
# create ggplot_missing function to map missing values:
library(reshape2)
library(dplyr)
library(ggplot2)
ggplot_missing <- function(x){
x %>% is.na %>% melt %>% ggplot(data = ., aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) +
scale_fill_grey (name = '', labels = c('Present', 'Missing')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(x = 'Variables on Dataset', y = 'Rows / Observations') }
# map missing values for train data:
vis.train <- ggplot_missing(train.data)
num.miss.train <- sapply(train.data,function(x) sum(is.na(x)))
# map missing values for test data:
vis.test <- ggplot_missing(test.data)
num.miss.test <- sapply(test.data,function(x) sum(is.na(x)))
miss.vis <- list("vis.train"=vis.train, "vis.test"=vis.test,
"num.train"=num.miss.train, "num.test"=num.miss.test)
# histogram of Target variable
if (is.numeric(train.data[tar.loc.train])) { histo <- hist(train.data[tar.loc.train]) }
else {histo = NULL}
# exploring relationships among features: correlation matrix
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
# visualing relationships among features: scatterplot matrix
# library(tidyverse)
library(gridExtra)
col <- c("blue", "red")
scatterplot <- arrangeGrob(pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1))
# more informative scatterplot matrix
library(psych)
pairs.panels(train.data[numeric.col])
return(list("summary"=sum.data, "missing.value"=miss.vis, "histogram"=histo,
"matrix.correlation"=matrix.cor, "scatter.plot"=scatterplot))
}
visualize.data <- vis(train.data, test.data, 17, 17)
visualize.data$scatter.plot$layout
visualize.data$scatter.plot
visualize.data$scatter.plot$grobs
# Data visualization function:
vis <- function(train.data, test.data, tar.loc.train, tar.loc.test)
{
# summarize dataset
sum.train <- summary(train.data)
sum.test  <- summary(test.data)
sum.data  <- list("summary.train.data"=sum.train, "summary.test.data"=sum.test)
# create ggplot_missing function to map missing values:
library(reshape2)
library(dplyr)
library(ggplot2)
ggplot_missing <- function(x){
x %>% is.na %>% melt %>% ggplot(data = ., aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) +
scale_fill_grey (name = '', labels = c('Present', 'Missing')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(x = 'Variables on Dataset', y = 'Rows / Observations') }
# map missing values for train data:
vis.train <- ggplot_missing(train.data)
num.miss.train <- sapply(train.data,function(x) sum(is.na(x)))
# map missing values for test data:
vis.test <- ggplot_missing(test.data)
num.miss.test <- sapply(test.data,function(x) sum(is.na(x)))
miss.vis <- list("vis.train"=vis.train, "vis.test"=vis.test,
"num.train"=num.miss.train, "num.test"=num.miss.test)
# histogram of Target variable
if (is.numeric(train.data[tar.loc.train])) { histo <- hist(train.data[tar.loc.train]) }
else {histo = NULL}
# exploring relationships among features: correlation matrix
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
# visualing relationships among features: scatterplot matrix
# library(tidyverse)
library(gridExtra)
col <- c("blue", "red")
p   <- pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1)
scatter <- arrangeGrob(p)
# more informative scatterplot matrix
library(psych)
pairs.panels(train.data[numeric.col])
return(list("summary"=sum.data, "missing.value"=miss.vis, "histogram"=histo,
"matrix.correlation"=matrix.cor, "scatter.plot"=scatter))
}
visualize.data <- vis(train.data, test.data, 17, 17)
visualize.data$scatter.plot
# Data visualization function:
vis <- function(train.data, test.data, tar.loc.train, tar.loc.test)
{
# summarize dataset
sum.train <- summary(train.data)
sum.test  <- summary(test.data)
sum.data  <- list("summary.train.data"=sum.train, "summary.test.data"=sum.test)
# create ggplot_missing function to map missing values:
library(reshape2)
library(dplyr)
library(ggplot2)
ggplot_missing <- function(x){
x %>% is.na %>% melt %>% ggplot(data = ., aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) +
scale_fill_grey (name = '', labels = c('Present', 'Missing')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(x = 'Variables on Dataset', y = 'Rows / Observations') }
# map missing values for train data:
vis.train <- ggplot_missing(train.data)
num.miss.train <- sapply(train.data,function(x) sum(is.na(x)))
# map missing values for test data:
vis.test <- ggplot_missing(test.data)
num.miss.test <- sapply(test.data,function(x) sum(is.na(x)))
miss.vis <- list("vis.train"=vis.train, "vis.test"=vis.test,
"num.train"=num.miss.train, "num.test"=num.miss.test)
# histogram of Target variable
if (is.numeric(train.data[tar.loc.train])) { histo <- hist(train.data[tar.loc.train]) }
else {histo = NULL}
# exploring relationships among features: correlation matrix
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
# visualing relationships among features: scatterplot matrix
# library(tidyverse)
library(gridExtra)
col <- c("blue", "red")
p   <- pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1)
scatter <- arrangeGrob(p, p)
# more informative scatterplot matrix
library(psych)
pairs.panels(train.data[numeric.col])
return(list("summary"=sum.data, "missing.value"=miss.vis, "histogram"=histo,
"matrix.correlation"=matrix.cor, "scatter.plot"=scatter))
}
visualize.data <- vis(train.data, test.data, 17, 17)
visualize.data$scatter.plot
grid::grid.draw(visualize.data$scatter.plot)
grid::grid.draw(visualize.data$scatter.plot$layout)
grid::grid.draw(visualize.data$scatter.plot$grobs[1])
grid::grid.draw(visualize.data$scatter.plot$grobs)
install.packages("pryr")
library(pryr)
col <- c("blue", "red")
p %<p-% pairs(train.data[numeric.col],col = col, cex.labels = 1.5,
lower.panel = NULL, pch=19, cex = 1)
scatter <- "p"
library(pryr)
col <- c("blue", "red")
p %<p-% {pairs(train.data[numeric.col],col = col, cex.labels = 1.5, lower.panel = NULL, pch=19, cex = 1)}
scatter <- "p"
library(pryr)
col <- c("blue", "red")
p%<p-% {pairs(train.data[numeric.col],col = col, cex.labels = 1.5, lower.panel = NULL, pch=19, cex = 1)}
scatter <- "p"
?pairs
# Data visualization function:
vis <- function(train.data, test.data, tar.loc.train, tar.loc.test)
{
# summarize dataset
sum.train <- summary(train.data)
sum.test  <- summary(test.data)
sum.data  <- list("summary.train.data"=sum.train, "summary.test.data"=sum.test)
# create ggplot_missing function to map missing values:
library(reshape2)
library(dplyr)
library(ggplot2)
ggplot_missing <- function(x){
x %>% is.na %>% melt %>% ggplot(data = ., aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) +
scale_fill_grey (name = '', labels = c('Present', 'Missing')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(x = 'Variables on Dataset', y = 'Rows / Observations') }
# map missing values for train data:
vis.train <- ggplot_missing(train.data)
num.miss.train <- sapply(train.data,function(x) sum(is.na(x)))
# map missing values for test data:
vis.test <- ggplot_missing(test.data)
num.miss.test <- sapply(test.data,function(x) sum(is.na(x)))
miss.vis <- list("vis.train"=vis.train, "vis.test"=vis.test,
"num.train"=num.miss.train, "num.test"=num.miss.test)
# histogram of Target variable
if (is.numeric(train.data[tar.loc.train])) { histo <- hist(train.data[tar.loc.train]) }
else {histo = NULL}
# exploring relationships among features: correlation matrix
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
# visualing relationships among features: scatterplot matrix
col <- c("blue", "red")
pairs(train.data[numeric.col],col = col, cex.labels = 1.5, lower.panel = NULL, pch=19, cex = 1)
# more informative scatterplot matrix
library(psych)
pairs.panels(train.data[numeric.col])
return(list("summary"=sum.data, "missing.value"=miss.vis, "histogram"=histo, "matrix.correlation"=matrix.cor))
}
visualize.data <- vis(train.data, test.data, 17, 17)
visualize.data$missing.value$num.train
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Visualization.R')
col <- c("blue", "red")
pairs(train.data[numeric.col],col = col, cex.labels = 1.5, lower.panel = NULL, pch=19, cex = 1)
p1 <- recordPlot()
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Input.R')
tar.name.train     <- names(train.data[tar.loc.train])
class.train        <- lapply(train.data[-tar.loc.train], class)
{
if (any(class.train=="factor")) {
char.name.train  <- names(which(class.train=="factor"))
char.loc.train   <- match(char.name.train, names(train.data))
numeric.col      <- names(train.data[-c(char.loc.train, tar.loc.train)]) }
else {
numeric.col      <- names(train.data[-tar.loc.train]) }
}
matrix.cor <- cor(train.data[numeric.col])
col <- c("blue", "red")
pairs(train.data[numeric.col],col = col, cex.labels = 1.5, lower.panel = NULL, pch=19, cex = 1)
p1 <- recordPlot()
p1
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Input.R')
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/CleanUp.R')
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/FeaturesEncode.R')
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/MissingValueImputation.R')
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Normalization.R')
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/SupportVectorMachine.R')
clean.data <- cleanup(train.data, test.data, 17, 17)
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Rearrange.R')
clean.data <- cleanup(train.data, test.data, 17, 17)
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Visualization.R')
vis.data <- vis(train.data, test.data, tar.loc.train, tar.loc.test)
vis.data
library(dplyr)
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Visualization.R')
vis.data <- vis(train.data, test.data, tar.loc.train, tar.loc.test)
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Visualization.R')
vis.data <- vis(train.data, test.data, tar.loc.train, tar.loc.test)
vis.data$scatter.plot1
suvema(clean.data$`SVM.&.ANN`$train.data, clean.data$`SVM.&.ANN`$test.data)
clean.data$`SVM.&.ANN`$train.data
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Input.R')
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Input.R')
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/Input.R')
clean.data <- cleanup(train.data, test.data, 17, 17)
source('C:/Users/SEAN  PHAN/Desktop/Lazy Panda Project/ArtificialNeuralNetwork.R')
ann(clean.data$`SVM.&.ANN`$train.data, clean.data$`SVM.&.ANN`$test.data)
